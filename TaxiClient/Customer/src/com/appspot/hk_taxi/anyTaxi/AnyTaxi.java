/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2014-04-01 18:14:47 UTC)
 * on 2014-04-04 at 08:05:00 UTC 
 * Modify at your own risk.
 */

package com.appspot.hk_taxi.anyTaxi;

/**
 * Service definition for AnyTaxi (v2).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link AnyTaxiRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class AnyTaxi extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.16.0-rc of the anyTaxi library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://hk-taxi.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "anyTaxi/v2/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public AnyTaxi(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  AnyTaxi(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * Create a request for the method "acceptTransaction".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link AcceptTransaction#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public AcceptTransaction acceptTransaction(java.lang.Long id) throws java.io.IOException {
    AcceptTransaction result = new AcceptTransaction(id);
    initialize(result);
    return result;
  }

  public class AcceptTransaction extends AnyTaxiRequest<com.appspot.hk_taxi.anyTaxi.model.Transaction> {

    private static final String REST_PATH = "acceptTransaction/{id}";

    /**
     * Create a request for the method "acceptTransaction".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link AcceptTransaction#execute()} method to invoke the remote operation.
     * <p> {@link AcceptTransaction#initialize(com.google.api.client.googleapis.services.AbstractGoogl
     * eClientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected AcceptTransaction(java.lang.Long id) {
      super(AnyTaxi.this, "PUT", REST_PATH, null, com.appspot.hk_taxi.anyTaxi.model.Transaction.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public AcceptTransaction setAlt(java.lang.String alt) {
      return (AcceptTransaction) super.setAlt(alt);
    }

    @Override
    public AcceptTransaction setFields(java.lang.String fields) {
      return (AcceptTransaction) super.setFields(fields);
    }

    @Override
    public AcceptTransaction setKey(java.lang.String key) {
      return (AcceptTransaction) super.setKey(key);
    }

    @Override
    public AcceptTransaction setOauthToken(java.lang.String oauthToken) {
      return (AcceptTransaction) super.setOauthToken(oauthToken);
    }

    @Override
    public AcceptTransaction setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AcceptTransaction) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AcceptTransaction setQuotaUser(java.lang.String quotaUser) {
      return (AcceptTransaction) super.setQuotaUser(quotaUser);
    }

    @Override
    public AcceptTransaction setUserIp(java.lang.String userIp) {
      return (AcceptTransaction) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public AcceptTransaction setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public AcceptTransaction set(String parameterName, Object value) {
      return (AcceptTransaction) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addCustomer".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link AddCustomer#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.Customer}
   * @return the request
   */
  public AddCustomer addCustomer(com.appspot.hk_taxi.anyTaxi.model.Customer content) throws java.io.IOException {
    AddCustomer result = new AddCustomer(content);
    initialize(result);
    return result;
  }

  public class AddCustomer extends AnyTaxiRequest<com.appspot.hk_taxi.anyTaxi.model.Customer> {

    private static final String REST_PATH = "addCustomer";

    /**
     * Create a request for the method "addCustomer".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link AddCustomer#execute()} method to invoke the remote operation. <p>
     * {@link
     * AddCustomer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.Customer}
     * @since 1.13
     */
    protected AddCustomer(com.appspot.hk_taxi.anyTaxi.model.Customer content) {
      super(AnyTaxi.this, "POST", REST_PATH, content, com.appspot.hk_taxi.anyTaxi.model.Customer.class);
    }

    @Override
    public AddCustomer setAlt(java.lang.String alt) {
      return (AddCustomer) super.setAlt(alt);
    }

    @Override
    public AddCustomer setFields(java.lang.String fields) {
      return (AddCustomer) super.setFields(fields);
    }

    @Override
    public AddCustomer setKey(java.lang.String key) {
      return (AddCustomer) super.setKey(key);
    }

    @Override
    public AddCustomer setOauthToken(java.lang.String oauthToken) {
      return (AddCustomer) super.setOauthToken(oauthToken);
    }

    @Override
    public AddCustomer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddCustomer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddCustomer setQuotaUser(java.lang.String quotaUser) {
      return (AddCustomer) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddCustomer setUserIp(java.lang.String userIp) {
      return (AddCustomer) super.setUserIp(userIp);
    }

    @Override
    public AddCustomer set(String parameterName, Object value) {
      return (AddCustomer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addDriver".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link AddDriver#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.Driver}
   * @return the request
   */
  public AddDriver addDriver(com.appspot.hk_taxi.anyTaxi.model.Driver content) throws java.io.IOException {
    AddDriver result = new AddDriver(content);
    initialize(result);
    return result;
  }

  public class AddDriver extends AnyTaxiRequest<com.appspot.hk_taxi.anyTaxi.model.Driver> {

    private static final String REST_PATH = "addDriver";

    /**
     * Create a request for the method "addDriver".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link AddDriver#execute()} method to invoke the remote operation. <p>
     * {@link
     * AddDriver#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.Driver}
     * @since 1.13
     */
    protected AddDriver(com.appspot.hk_taxi.anyTaxi.model.Driver content) {
      super(AnyTaxi.this, "POST", REST_PATH, content, com.appspot.hk_taxi.anyTaxi.model.Driver.class);
    }

    @Override
    public AddDriver setAlt(java.lang.String alt) {
      return (AddDriver) super.setAlt(alt);
    }

    @Override
    public AddDriver setFields(java.lang.String fields) {
      return (AddDriver) super.setFields(fields);
    }

    @Override
    public AddDriver setKey(java.lang.String key) {
      return (AddDriver) super.setKey(key);
    }

    @Override
    public AddDriver setOauthToken(java.lang.String oauthToken) {
      return (AddDriver) super.setOauthToken(oauthToken);
    }

    @Override
    public AddDriver setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddDriver) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddDriver setQuotaUser(java.lang.String quotaUser) {
      return (AddDriver) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddDriver setUserIp(java.lang.String userIp) {
      return (AddDriver) super.setUserIp(userIp);
    }

    @Override
    public AddDriver set(String parameterName, Object value) {
      return (AddDriver) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "addTransaction".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link AddTransaction#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.Transaction}
   * @return the request
   */
  public AddTransaction addTransaction(com.appspot.hk_taxi.anyTaxi.model.Transaction content) throws java.io.IOException {
    AddTransaction result = new AddTransaction(content);
    initialize(result);
    return result;
  }

  public class AddTransaction extends AnyTaxiRequest<com.appspot.hk_taxi.anyTaxi.model.Transaction> {

    private static final String REST_PATH = "addTransaction";

    /**
     * Create a request for the method "addTransaction".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link AddTransaction#execute()} method to invoke the remote operation.
     * <p> {@link AddTransaction#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.Transaction}
     * @since 1.13
     */
    protected AddTransaction(com.appspot.hk_taxi.anyTaxi.model.Transaction content) {
      super(AnyTaxi.this, "POST", REST_PATH, content, com.appspot.hk_taxi.anyTaxi.model.Transaction.class);
    }

    @Override
    public AddTransaction setAlt(java.lang.String alt) {
      return (AddTransaction) super.setAlt(alt);
    }

    @Override
    public AddTransaction setFields(java.lang.String fields) {
      return (AddTransaction) super.setFields(fields);
    }

    @Override
    public AddTransaction setKey(java.lang.String key) {
      return (AddTransaction) super.setKey(key);
    }

    @Override
    public AddTransaction setOauthToken(java.lang.String oauthToken) {
      return (AddTransaction) super.setOauthToken(oauthToken);
    }

    @Override
    public AddTransaction setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (AddTransaction) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public AddTransaction setQuotaUser(java.lang.String quotaUser) {
      return (AddTransaction) super.setQuotaUser(quotaUser);
    }

    @Override
    public AddTransaction setUserIp(java.lang.String userIp) {
      return (AddTransaction) super.setUserIp(userIp);
    }

    @Override
    public AddTransaction set(String parameterName, Object value) {
      return (AddTransaction) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getCustomer".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link GetCustomer#execute()} method to invoke the remote operation.
   *
   * @param email
   * @return the request
   */
  public GetCustomer getCustomer(java.lang.String email) throws java.io.IOException {
    GetCustomer result = new GetCustomer(email);
    initialize(result);
    return result;
  }

  public class GetCustomer extends AnyTaxiRequest<com.appspot.hk_taxi.anyTaxi.model.Customer> {

    private static final String REST_PATH = "customer/{email}";

    /**
     * Create a request for the method "getCustomer".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link GetCustomer#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetCustomer#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @since 1.13
     */
    protected GetCustomer(java.lang.String email) {
      super(AnyTaxi.this, "GET", REST_PATH, null, com.appspot.hk_taxi.anyTaxi.model.Customer.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetCustomer setAlt(java.lang.String alt) {
      return (GetCustomer) super.setAlt(alt);
    }

    @Override
    public GetCustomer setFields(java.lang.String fields) {
      return (GetCustomer) super.setFields(fields);
    }

    @Override
    public GetCustomer setKey(java.lang.String key) {
      return (GetCustomer) super.setKey(key);
    }

    @Override
    public GetCustomer setOauthToken(java.lang.String oauthToken) {
      return (GetCustomer) super.setOauthToken(oauthToken);
    }

    @Override
    public GetCustomer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetCustomer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetCustomer setQuotaUser(java.lang.String quotaUser) {
      return (GetCustomer) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetCustomer setUserIp(java.lang.String userIp) {
      return (GetCustomer) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public GetCustomer setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @Override
    public GetCustomer set(String parameterName, Object value) {
      return (GetCustomer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDriver".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link GetDriver#execute()} method to invoke the remote operation.
   *
   * @param email
   * @return the request
   */
  public GetDriver getDriver(java.lang.String email) throws java.io.IOException {
    GetDriver result = new GetDriver(email);
    initialize(result);
    return result;
  }

  public class GetDriver extends AnyTaxiRequest<com.appspot.hk_taxi.anyTaxi.model.Driver> {

    private static final String REST_PATH = "driver/{email}";

    /**
     * Create a request for the method "getDriver".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link GetDriver#execute()} method to invoke the remote operation. <p>
     * {@link
     * GetDriver#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param email
     * @since 1.13
     */
    protected GetDriver(java.lang.String email) {
      super(AnyTaxi.this, "GET", REST_PATH, null, com.appspot.hk_taxi.anyTaxi.model.Driver.class);
      this.email = com.google.api.client.util.Preconditions.checkNotNull(email, "Required parameter email must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDriver setAlt(java.lang.String alt) {
      return (GetDriver) super.setAlt(alt);
    }

    @Override
    public GetDriver setFields(java.lang.String fields) {
      return (GetDriver) super.setFields(fields);
    }

    @Override
    public GetDriver setKey(java.lang.String key) {
      return (GetDriver) super.setKey(key);
    }

    @Override
    public GetDriver setOauthToken(java.lang.String oauthToken) {
      return (GetDriver) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDriver setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDriver) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDriver setQuotaUser(java.lang.String quotaUser) {
      return (GetDriver) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDriver setUserIp(java.lang.String userIp) {
      return (GetDriver) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.String email;

    /**

     */
    public java.lang.String getEmail() {
      return email;
    }

    public GetDriver setEmail(java.lang.String email) {
      this.email = email;
      return this;
    }

    @Override
    public GetDriver set(String parameterName, Object value) {
      return (GetDriver) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getDriverLocation".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link GetDriverLocation#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetDriverLocation getDriverLocation(java.lang.Long id) throws java.io.IOException {
    GetDriverLocation result = new GetDriverLocation(id);
    initialize(result);
    return result;
  }

  public class GetDriverLocation extends AnyTaxiRequest<com.appspot.hk_taxi.anyTaxi.model.GeoPt> {

    private static final String REST_PATH = "location/driver";

    /**
     * Create a request for the method "getDriverLocation".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link GetDriverLocation#execute()} method to invoke the remote operation.
     * <p> {@link GetDriverLocation#initialize(com.google.api.client.googleapis.services.AbstractGoogl
     * eClientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetDriverLocation(java.lang.Long id) {
      super(AnyTaxi.this, "GET", REST_PATH, null, com.appspot.hk_taxi.anyTaxi.model.GeoPt.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetDriverLocation setAlt(java.lang.String alt) {
      return (GetDriverLocation) super.setAlt(alt);
    }

    @Override
    public GetDriverLocation setFields(java.lang.String fields) {
      return (GetDriverLocation) super.setFields(fields);
    }

    @Override
    public GetDriverLocation setKey(java.lang.String key) {
      return (GetDriverLocation) super.setKey(key);
    }

    @Override
    public GetDriverLocation setOauthToken(java.lang.String oauthToken) {
      return (GetDriverLocation) super.setOauthToken(oauthToken);
    }

    @Override
    public GetDriverLocation setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetDriverLocation) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetDriverLocation setQuotaUser(java.lang.String quotaUser) {
      return (GetDriverLocation) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetDriverLocation setUserIp(java.lang.String userIp) {
      return (GetDriverLocation) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetDriverLocation setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetDriverLocation set(String parameterName, Object value) {
      return (GetDriverLocation) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "getTransaction".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link GetTransaction#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public GetTransaction getTransaction(java.lang.Long id) throws java.io.IOException {
    GetTransaction result = new GetTransaction(id);
    initialize(result);
    return result;
  }

  public class GetTransaction extends AnyTaxiRequest<com.appspot.hk_taxi.anyTaxi.model.Transaction> {

    private static final String REST_PATH = "transaction/{id}";

    /**
     * Create a request for the method "getTransaction".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link GetTransaction#execute()} method to invoke the remote operation.
     * <p> {@link GetTransaction#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected GetTransaction(java.lang.Long id) {
      super(AnyTaxi.this, "GET", REST_PATH, null, com.appspot.hk_taxi.anyTaxi.model.Transaction.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
      return super.executeUsingHead();
    }

    @Override
    public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
      return super.buildHttpRequestUsingHead();
    }

    @Override
    public GetTransaction setAlt(java.lang.String alt) {
      return (GetTransaction) super.setAlt(alt);
    }

    @Override
    public GetTransaction setFields(java.lang.String fields) {
      return (GetTransaction) super.setFields(fields);
    }

    @Override
    public GetTransaction setKey(java.lang.String key) {
      return (GetTransaction) super.setKey(key);
    }

    @Override
    public GetTransaction setOauthToken(java.lang.String oauthToken) {
      return (GetTransaction) super.setOauthToken(oauthToken);
    }

    @Override
    public GetTransaction setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (GetTransaction) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public GetTransaction setQuotaUser(java.lang.String quotaUser) {
      return (GetTransaction) super.setQuotaUser(quotaUser);
    }

    @Override
    public GetTransaction setUserIp(java.lang.String userIp) {
      return (GetTransaction) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public GetTransaction setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public GetTransaction set(String parameterName, Object value) {
      return (GetTransaction) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeCustomer".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link RemoveCustomer#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public RemoveCustomer removeCustomer() throws java.io.IOException {
    RemoveCustomer result = new RemoveCustomer();
    initialize(result);
    return result;
  }

  public class RemoveCustomer extends AnyTaxiRequest<Void> {

    private static final String REST_PATH = "customer";

    /**
     * Create a request for the method "removeCustomer".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link RemoveCustomer#execute()} method to invoke the remote operation.
     * <p> {@link RemoveCustomer#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @since 1.13
     */
    protected RemoveCustomer() {
      super(AnyTaxi.this, "DELETE", REST_PATH, null, Void.class);
    }

    @Override
    public RemoveCustomer setAlt(java.lang.String alt) {
      return (RemoveCustomer) super.setAlt(alt);
    }

    @Override
    public RemoveCustomer setFields(java.lang.String fields) {
      return (RemoveCustomer) super.setFields(fields);
    }

    @Override
    public RemoveCustomer setKey(java.lang.String key) {
      return (RemoveCustomer) super.setKey(key);
    }

    @Override
    public RemoveCustomer setOauthToken(java.lang.String oauthToken) {
      return (RemoveCustomer) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveCustomer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveCustomer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveCustomer setQuotaUser(java.lang.String quotaUser) {
      return (RemoveCustomer) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveCustomer setUserIp(java.lang.String userIp) {
      return (RemoveCustomer) super.setUserIp(userIp);
    }

    @Override
    public RemoveCustomer set(String parameterName, Object value) {
      return (RemoveCustomer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeDriver".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link RemoveDriver#execute()} method to invoke the remote operation.
   *
   * @return the request
   */
  public RemoveDriver removeDriver() throws java.io.IOException {
    RemoveDriver result = new RemoveDriver();
    initialize(result);
    return result;
  }

  public class RemoveDriver extends AnyTaxiRequest<Void> {

    private static final String REST_PATH = "driver";

    /**
     * Create a request for the method "removeDriver".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link RemoveDriver#execute()} method to invoke the remote operation. <p>
     * {@link
     * RemoveDriver#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @since 1.13
     */
    protected RemoveDriver() {
      super(AnyTaxi.this, "DELETE", REST_PATH, null, Void.class);
    }

    @Override
    public RemoveDriver setAlt(java.lang.String alt) {
      return (RemoveDriver) super.setAlt(alt);
    }

    @Override
    public RemoveDriver setFields(java.lang.String fields) {
      return (RemoveDriver) super.setFields(fields);
    }

    @Override
    public RemoveDriver setKey(java.lang.String key) {
      return (RemoveDriver) super.setKey(key);
    }

    @Override
    public RemoveDriver setOauthToken(java.lang.String oauthToken) {
      return (RemoveDriver) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveDriver setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveDriver) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveDriver setQuotaUser(java.lang.String quotaUser) {
      return (RemoveDriver) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveDriver setUserIp(java.lang.String userIp) {
      return (RemoveDriver) super.setUserIp(userIp);
    }

    @Override
    public RemoveDriver set(String parameterName, Object value) {
      return (RemoveDriver) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "removeTransaction".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link RemoveTransaction#execute()} method to invoke the remote operation.
   *
   * @param id
   * @return the request
   */
  public RemoveTransaction removeTransaction(java.lang.Long id) throws java.io.IOException {
    RemoveTransaction result = new RemoveTransaction(id);
    initialize(result);
    return result;
  }

  public class RemoveTransaction extends AnyTaxiRequest<Void> {

    private static final String REST_PATH = "transaction/{id}";

    /**
     * Create a request for the method "removeTransaction".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link RemoveTransaction#execute()} method to invoke the remote operation.
     * <p> {@link RemoveTransaction#initialize(com.google.api.client.googleapis.services.AbstractGoogl
     * eClientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param id
     * @since 1.13
     */
    protected RemoveTransaction(java.lang.Long id) {
      super(AnyTaxi.this, "DELETE", REST_PATH, null, Void.class);
      this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
    }

    @Override
    public RemoveTransaction setAlt(java.lang.String alt) {
      return (RemoveTransaction) super.setAlt(alt);
    }

    @Override
    public RemoveTransaction setFields(java.lang.String fields) {
      return (RemoveTransaction) super.setFields(fields);
    }

    @Override
    public RemoveTransaction setKey(java.lang.String key) {
      return (RemoveTransaction) super.setKey(key);
    }

    @Override
    public RemoveTransaction setOauthToken(java.lang.String oauthToken) {
      return (RemoveTransaction) super.setOauthToken(oauthToken);
    }

    @Override
    public RemoveTransaction setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (RemoveTransaction) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public RemoveTransaction setQuotaUser(java.lang.String quotaUser) {
      return (RemoveTransaction) super.setQuotaUser(quotaUser);
    }

    @Override
    public RemoveTransaction setUserIp(java.lang.String userIp) {
      return (RemoveTransaction) super.setUserIp(userIp);
    }

    @com.google.api.client.util.Key
    private java.lang.Long id;

    /**

     */
    public java.lang.Long getId() {
      return id;
    }

    public RemoveTransaction setId(java.lang.Long id) {
      this.id = id;
      return this;
    }

    @Override
    public RemoveTransaction set(String parameterName, Object value) {
      return (RemoveTransaction) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateCustomer".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link UpdateCustomer#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.Customer}
   * @return the request
   */
  public UpdateCustomer updateCustomer(com.appspot.hk_taxi.anyTaxi.model.Customer content) throws java.io.IOException {
    UpdateCustomer result = new UpdateCustomer(content);
    initialize(result);
    return result;
  }

  public class UpdateCustomer extends AnyTaxiRequest<com.appspot.hk_taxi.anyTaxi.model.Customer> {

    private static final String REST_PATH = "customer";

    /**
     * Create a request for the method "updateCustomer".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link UpdateCustomer#execute()} method to invoke the remote operation.
     * <p> {@link UpdateCustomer#initialize(com.google.api.client.googleapis.services.AbstractGoogleCl
     * ientRequest)} must be called to initialize this instance immediately after invoking the
     * constructor. </p>
     *
     * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.Customer}
     * @since 1.13
     */
    protected UpdateCustomer(com.appspot.hk_taxi.anyTaxi.model.Customer content) {
      super(AnyTaxi.this, "PUT", REST_PATH, content, com.appspot.hk_taxi.anyTaxi.model.Customer.class);
    }

    @Override
    public UpdateCustomer setAlt(java.lang.String alt) {
      return (UpdateCustomer) super.setAlt(alt);
    }

    @Override
    public UpdateCustomer setFields(java.lang.String fields) {
      return (UpdateCustomer) super.setFields(fields);
    }

    @Override
    public UpdateCustomer setKey(java.lang.String key) {
      return (UpdateCustomer) super.setKey(key);
    }

    @Override
    public UpdateCustomer setOauthToken(java.lang.String oauthToken) {
      return (UpdateCustomer) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateCustomer setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateCustomer) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateCustomer setQuotaUser(java.lang.String quotaUser) {
      return (UpdateCustomer) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateCustomer setUserIp(java.lang.String userIp) {
      return (UpdateCustomer) super.setUserIp(userIp);
    }

    @Override
    public UpdateCustomer set(String parameterName, Object value) {
      return (UpdateCustomer) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateCustomerLocation".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link UpdateCustomerLocation#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.Customer}
   * @return the request
   */
  public UpdateCustomerLocation updateCustomerLocation(com.appspot.hk_taxi.anyTaxi.model.Customer content) throws java.io.IOException {
    UpdateCustomerLocation result = new UpdateCustomerLocation(content);
    initialize(result);
    return result;
  }

  public class UpdateCustomerLocation extends AnyTaxiRequest<com.appspot.hk_taxi.anyTaxi.model.Customer> {

    private static final String REST_PATH = "location/customer";

    /**
     * Create a request for the method "updateCustomerLocation".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link UpdateCustomerLocation#execute()} method to invoke the remote
     * operation. <p> {@link UpdateCustomerLocation#initialize(com.google.api.client.googleapis.servic
     * es.AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.Customer}
     * @since 1.13
     */
    protected UpdateCustomerLocation(com.appspot.hk_taxi.anyTaxi.model.Customer content) {
      super(AnyTaxi.this, "PUT", REST_PATH, content, com.appspot.hk_taxi.anyTaxi.model.Customer.class);
    }

    @Override
    public UpdateCustomerLocation setAlt(java.lang.String alt) {
      return (UpdateCustomerLocation) super.setAlt(alt);
    }

    @Override
    public UpdateCustomerLocation setFields(java.lang.String fields) {
      return (UpdateCustomerLocation) super.setFields(fields);
    }

    @Override
    public UpdateCustomerLocation setKey(java.lang.String key) {
      return (UpdateCustomerLocation) super.setKey(key);
    }

    @Override
    public UpdateCustomerLocation setOauthToken(java.lang.String oauthToken) {
      return (UpdateCustomerLocation) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateCustomerLocation setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateCustomerLocation) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateCustomerLocation setQuotaUser(java.lang.String quotaUser) {
      return (UpdateCustomerLocation) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateCustomerLocation setUserIp(java.lang.String userIp) {
      return (UpdateCustomerLocation) super.setUserIp(userIp);
    }

    @Override
    public UpdateCustomerLocation set(String parameterName, Object value) {
      return (UpdateCustomerLocation) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateDriver".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link UpdateDriver#execute()} method to invoke the remote operation.
   *
   * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.Driver}
   * @return the request
   */
  public UpdateDriver updateDriver(com.appspot.hk_taxi.anyTaxi.model.Driver content) throws java.io.IOException {
    UpdateDriver result = new UpdateDriver(content);
    initialize(result);
    return result;
  }

  public class UpdateDriver extends AnyTaxiRequest<com.appspot.hk_taxi.anyTaxi.model.Driver> {

    private static final String REST_PATH = "driver";

    /**
     * Create a request for the method "updateDriver".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link UpdateDriver#execute()} method to invoke the remote operation. <p>
     * {@link
     * UpdateDriver#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
     * must be called to initialize this instance immediately after invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.Driver}
     * @since 1.13
     */
    protected UpdateDriver(com.appspot.hk_taxi.anyTaxi.model.Driver content) {
      super(AnyTaxi.this, "PUT", REST_PATH, content, com.appspot.hk_taxi.anyTaxi.model.Driver.class);
    }

    @Override
    public UpdateDriver setAlt(java.lang.String alt) {
      return (UpdateDriver) super.setAlt(alt);
    }

    @Override
    public UpdateDriver setFields(java.lang.String fields) {
      return (UpdateDriver) super.setFields(fields);
    }

    @Override
    public UpdateDriver setKey(java.lang.String key) {
      return (UpdateDriver) super.setKey(key);
    }

    @Override
    public UpdateDriver setOauthToken(java.lang.String oauthToken) {
      return (UpdateDriver) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateDriver setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateDriver) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateDriver setQuotaUser(java.lang.String quotaUser) {
      return (UpdateDriver) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateDriver setUserIp(java.lang.String userIp) {
      return (UpdateDriver) super.setUserIp(userIp);
    }

    @Override
    public UpdateDriver set(String parameterName, Object value) {
      return (UpdateDriver) super.set(parameterName, value);
    }
  }

  /**
   * Create a request for the method "updateDriverLocation".
   *
   * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
   * parameters, call the {@link UpdateDriverLocation#execute()} method to invoke the remote
   * operation.
   *
   * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.GeoPt}
   * @return the request
   */
  public UpdateDriverLocation updateDriverLocation(com.appspot.hk_taxi.anyTaxi.model.GeoPt content) throws java.io.IOException {
    UpdateDriverLocation result = new UpdateDriverLocation(content);
    initialize(result);
    return result;
  }

  public class UpdateDriverLocation extends AnyTaxiRequest<Void> {

    private static final String REST_PATH = "location/driver";

    /**
     * Create a request for the method "updateDriverLocation".
     *
     * This request holds the parameters needed by the the anyTaxi server.  After setting any optional
     * parameters, call the {@link UpdateDriverLocation#execute()} method to invoke the remote
     * operation. <p> {@link UpdateDriverLocation#initialize(com.google.api.client.googleapis.services
     * .AbstractGoogleClientRequest)} must be called to initialize this instance immediately after
     * invoking the constructor. </p>
     *
     * @param content the {@link com.appspot.hk_taxi.anyTaxi.model.GeoPt}
     * @since 1.13
     */
    protected UpdateDriverLocation(com.appspot.hk_taxi.anyTaxi.model.GeoPt content) {
      super(AnyTaxi.this, "PUT", REST_PATH, content, Void.class);
    }

    @Override
    public UpdateDriverLocation setAlt(java.lang.String alt) {
      return (UpdateDriverLocation) super.setAlt(alt);
    }

    @Override
    public UpdateDriverLocation setFields(java.lang.String fields) {
      return (UpdateDriverLocation) super.setFields(fields);
    }

    @Override
    public UpdateDriverLocation setKey(java.lang.String key) {
      return (UpdateDriverLocation) super.setKey(key);
    }

    @Override
    public UpdateDriverLocation setOauthToken(java.lang.String oauthToken) {
      return (UpdateDriverLocation) super.setOauthToken(oauthToken);
    }

    @Override
    public UpdateDriverLocation setPrettyPrint(java.lang.Boolean prettyPrint) {
      return (UpdateDriverLocation) super.setPrettyPrint(prettyPrint);
    }

    @Override
    public UpdateDriverLocation setQuotaUser(java.lang.String quotaUser) {
      return (UpdateDriverLocation) super.setQuotaUser(quotaUser);
    }

    @Override
    public UpdateDriverLocation setUserIp(java.lang.String userIp) {
      return (UpdateDriverLocation) super.setUserIp(userIp);
    }

    @Override
    public UpdateDriverLocation set(String parameterName, Object value) {
      return (UpdateDriverLocation) super.set(parameterName, value);
    }
  }

  /**
   * Builder for {@link AnyTaxi}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link AnyTaxi}. */
    @Override
    public AnyTaxi build() {
      return new AnyTaxi(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link AnyTaxiRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setAnyTaxiRequestInitializer(
        AnyTaxiRequestInitializer anytaxiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(anytaxiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
